@page "/requests"
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject IRequestService requestService
@attribute [AuthorizeRoles(Role.Manager)]
<h1>Zgłoszenia</h1>

@if (requests == null)
{
<div class="spinner"></div> 
}            
else if (requests.Any())
{
<table id="activityTable" class="table table-striped table-bordered" style="text-align:center;">
    <thead>
        <tr>
            <th>Klient</th>
            <th>Marka pojazdu</th>
            <th>Model</th>
            <th>Opis</th>
            <th>Wynik</th>
            <th>Data rejestracji zgłoszenia</th>
            <th>Data zakończenia zgłoszenia</th>
            <th>Status</th>
            <th>Akcje</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var request in requests)
        {
        <tr>
            <td>@request.Car.Client.FirstName @request.Car.Client.LastName</td>
            <td>@request.Car.Brand</td>
            <td>@request.Car.Model</td>
            <td>@request.Description</td>
            <td>@request.Result</td>
            <td>@request.Reqistered</td>
            <td>@request.FinishedOrCancelled</td>
            <td><span class="badge badge-@GetBadge(request.Status)">@request.Status.GetDisplayName()</span></td>
            <td><button type="button" class="btn btn-primary" @onclick="() => DecomposeActivity(request)">Przypisz czynności</button></td>
        </tr>
        } 
    </tbody>
</table> 
}
else {
<div style="padding-top: 25px">
    <h2>Nie ma jeszcze żadnych klientów</h2>
</div>
}

@code { 
    public IEnumerable<Request> requests;

    protected override async Task OnInitializedAsync()
    {
        requests = await requestService.GetAllRequests();// new List<Request> { new Request() {
        await base.OnInitializedAsync();
    }

    private string GetBadge(Status status) => status switch
    {
        Status.Pending => "secondary",
        Status.InProgress => "warning",
        Status.Finished => "success",
        Status.Canceled => "danger",
        _ => "dark"
    };

    protected void DecomposeActivity(Request request)
    {
        navigationManager.NavigateTo($"/addActivities/{request.Id}");
    }
}
