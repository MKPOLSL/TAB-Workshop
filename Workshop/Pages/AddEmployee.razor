@page "/addEmployee"
@inject IEmployeeService employeeService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@attribute [AuthorizeRoles(Role.Administrator)]

<h1>
    Dodaj użytkownika
</h1>

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="Name" class="control-label">Imię</label>
                <input for="Name" class="form-control" @bind-value="@employee.FirstName" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Nazwisko</label>
                <input for="Name" class="form-control" @bind-value="@employee.LastName" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Login</label>
                <input for="Name" class="form-control" @bind-value="@employee.Username" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Hasło</label>
                <input for="Name" class="form-control" @bind-value="@employee.Password" />
            </div>
            <div class="form-group">
                <label for="Role" class="control-label">Rola</label>
                <select for="Role" class="form-control" @bind="employee.Role">
                    @foreach (Role role in Enum.GetValues(typeof(Role)))
                    {
                        <option value="@role">@role.GetDisplayName()</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" @onclick="() => CreateEmployee()">Zapisz</button>
                <button type="button" class="btn btn-danger" @onclick="() => Cancel()">Anuluj</button>
            </div>
        </form>
    </div>
</div>

@code {
    Employee employee = new Employee();

    protected async Task CreateEmployee()
    {
        await employeeService.AddEmployee(employee);
        navigationManager.NavigateTo("/");
    }

    void Cancel() => navigationManager.NavigateTo("/");
}
