@page "/clients"
@inject IClientService clientService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@attribute [AuthorizeRoles(Role.Manager)]

<h1>Klienci</h1>

@if (clients == null)
{
    <div class="spinner"></div>
}
else
{
    <table class="table  table-striped table-bordered"  style="text-align:center;">
        <thead>
            <tr>
                <th>Imię</th>
                <th>Nazwisko</th>
                <th>Numer telefonu</th>
                <th>Akcje</th>
                <th>
                    <button type="button" class="btn btn-primary" @onclick="() => AddNewClient()">Dodaj nowego klienta</button>
                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var client in clients)
            {
                <tr>
                    <td>@client.FirstName</td>
                    <td>@client.LastName</td>
                    <td>@client.PhoneNumber</td>
                    <td>
                        <button type="button" class="btn btn-warning" @onclick="() => EditClient(client)">Edytuj</button>
                        <button type="button" class="btn btn-danger" @onclick="() => DeleteClient(client)">Usuń</button>
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick="() => AddCar(client.Id)">Przypisz samochód</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public Guid ClientId { get; set; }
    private IEnumerable<Client> clients;

    protected override async Task OnInitializedAsync()
    {
        clients = await clientService.GetAllAsync();
    }

    void AddNewClient() => navigationManager.NavigateTo("/addClient");

    void EditClient(Client client)
    {
        navigationManager.NavigateTo($"/editClient/{client.Id}");
    }

    public async Task DeleteClient(Client client)
    {
        clientService.Delete(client);
        await clientService.SaveChangesAsync();
        navigationManager.NavigateTo("/clients", forceLoad: true);
    }

    void AddCar(Guid id)
    {
        ClientId = id;
        navigationManager.NavigateTo($"/addCar/{ClientId}");
    }
}