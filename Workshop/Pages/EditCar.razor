@page "/editCar/{CarId:guid}"
@inject ICarService carService
@inject ICarTypeService carTypeService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@attribute [AuthorizeRoles(Role.Manager)]

<h1>
    Edytuj Samochód
</h1>

<div class="row">
    <div class="col-md-4">
        <EditForm Model="@car" OnValidSubmit="@DoEditCar">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="Name" class="control-label">Marka</label>
                <input for="Name" class="form-control" @bind-value="@car.Brand" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Model</label>
                <input for="Name" class="form-control" @bind-value="@car.Model" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Rok produkcji</label>
                <input for="Name" class="form-control" @bind-value="@car.ProductionYear" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Numer rejestracyjny</label>
                <input for="Name" class="form-control" @bind-value="@car.RegistrationNumber" />
            </div>
            <div class="form-group">
                <label for="Role" class="control-label">Typ</label>
                <select for="Role" class="form-control" @bind="@chosenCarTypeCode">
                    @foreach (CarType cartype in cartypes)
                    {
                        <option value="@cartype.Code">@cartype.TypeName</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Zapisz</button>
                <button type="button" class="btn btn-danger" @onclick="() => Cancel()">Anuluj</button>
            </div>
        </EditForm>
    </div>
</div>

@code {

    [Parameter]
    public Guid CarId { get; set; }
    private Car car = new Car();
    private string chosenCarTypeCode;
    private IEnumerable<CarType> cartypes = new List<CarType>();

    protected override async Task OnParametersSetAsync()
    {
        car = await carService.GetCar(CarId);
        chosenCarTypeCode = car.CarType.Code;
        cartypes = await carTypeService.GetAllAsync();
    }

    protected async Task DoEditCar()
    {
        car.CarType = await carTypeService.GetTypeByCode(chosenCarTypeCode);
        carService.Update(car);
        await carService.SaveChangesAsync();
        navigationManager.NavigateTo("/cars");
    }

    void Cancel() => navigationManager.NavigateTo("/cars");
}
