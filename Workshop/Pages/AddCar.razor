@page "/addCar/{ClientId:guid}"
@inject ICarService carService
@inject ICarTypeService carTypeService
@inject IClientService clientService
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@attribute [AuthorizeRoles(Role.Manager)]

<h1>
    Dodaj/Powiąż Samochód
</h1>

<h2>
    Klient: @car.Client.FirstName @car.Client.LastName
</h2>

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="Name" class="control-label">Marka</label>
                <input for="Name" class="form-control" @bind-value="@car.Brand" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Model</label>
                <input for="Name" class="form-control" @bind-value="@car.Model" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Rok produkcji</label>
                <input for="Name" class="form-control" @bind-value="@car.ProductionYear" />
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Numer rejestracyjny</label>
                <input for="Name" class="form-control" @bind-value="@car.RegistrationNumber" />
            </div>
            <div class="form-group">
                <label for="Role" class="control-label">Typ</label>
                <select for="Role" class="form-control"  @bind="@chosenCarType.TypeName">
                    @foreach (CarType cartype in cartypes)
                    {
                        <option value="@cartype.TypeName">@cartype.TypeName</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <button type="button" class="btn btn-primary" @onclick="() => CreateCar(car)">Zapisz</button>
                <button type="button" class="btn btn-danger" @onclick="() => Cancel()">Anuluj</button>
            </div>
        </form>
    </div>
</div>

@code {
    [Parameter]
    public Guid ClientId { get; set; }
    private Car car = new Car
    {
        CarType = new CarType(),
        Client = new Client()
    };
    private IEnumerable<CarType> cartypes = new List<CarType>();
    private CarType chosenCarType = new CarType();

    protected override async Task OnInitializedAsync()
    {
    }

    protected override async Task OnParametersSetAsync()
    {
        cartypes = await carTypeService.GetAllAsync();
        car.Client = await clientService.GetClientById(ClientId);
        chosenCarType = cartypes.First();
    }

    protected async Task CreateCar(Car car)
    {
        car.CarType = await carTypeService.GetTypeByTypeName(chosenCarType.TypeName);
        await carService.CreateAsync(car);
        await carService.SaveChangesAsync();
        navigationManager.NavigateTo("/clients");
    }

    void Cancel() => navigationManager.NavigateTo("/clients");
}
